#!/usr/bin/env python3
"""
Script para corrigir o endpoint DRE N0 e parar de recriar as views
"""

import re

def fix_dre_n0_endpoint():
    """Corrige o endpoint DRE N0 para n√£o recriar views existentes"""
    
    print("üîß CORRIGINDO ENDPOINT DRE N0...")
    
    try:
        # 1. Ler o arquivo atual
        file_path = "endpoints/dre_n0_postgresql.py"
        
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        print(f"   üìÑ Arquivo lido: {file_path}")
        
        # 2. Identificar o problema
        print("\nüîç 2. IDENTIFICANDO PROBLEMA:")
        
        # Verificar se h√° c√≥digo que for√ßa recria√ß√£o
        if "for√ßando recria√ß√£o para aplicar corre√ß√µes" in content:
            print("   ‚ùå C√≥digo problem√°tico encontrado: For√ßa recria√ß√£o das views")
        else:
            print("   ‚úÖ C√≥digo problem√°tico N√ÉO encontrado")
        
        # Verificar se h√° verifica√ß√£o de view_exists
        if "view_exists" in content:
            print("   ‚úÖ Verifica√ß√£o de view_exists encontrada")
        else:
            print("   ‚ùå Verifica√ß√£o de view_exists N√ÉO encontrada")
        
        # 3. Corrigir o c√≥digo problem√°tico
        print("\nüîÑ 3. CORRIGINDO C√ìDIGO PROBLEM√ÅTICO:")
        
        # Substituir o c√≥digo que for√ßa recria√ß√£o
        old_code = '''            # Verificar e criar view se necess√°rio
            view_exists = DreN0Helper.check_view_exists(connection)
            
            if not view_exists:
                print("üèóÔ∏è View DRE N0 n√£o existe, criando...")
                if not DreN0Helper.create_dre_n0_view(connection):
                    raise HTTPException(status_code=500, detail="Erro ao criar view DRE N0")
                print("‚úÖ View v_dre_n0_completo criada com formato correto dos trimestres")
            else:
                print("üîÑ View DRE N0 j√° existe, for√ßando recria√ß√£o para aplicar corre√ß√µes...")
                if not DreN0Helper.create_dre_n0_view(connection):
                    raise HTTPException(status_code=500, detail="Erro ao recriar view DRE N0")
                print("‚úÖ View v_dre_n0_completo recriada com formato correto dos trimestres")'''
        
        new_code = '''            # Verificar se a view existe (sem for√ßar recria√ß√£o)
            view_exists = DreN0Helper.check_view_exists(connection)
            
            if not view_exists:
                print("üèóÔ∏è View DRE N0 n√£o existe, criando...")
                if not DreN0Helper.create_dre_n0_view(connection):
                    raise HTTPException(status_code=500, detail="Erro ao criar view DRE N0")
                print("‚úÖ View v_dre_n0_completo criada com formato correto dos trimestres")
            else:
                print("‚úÖ View DRE N0 j√° existe, usando view existente")'''
        
        # Fazer a substitui√ß√£o
        if old_code in content:
            content = content.replace(old_code, new_code)
            print("   ‚úÖ C√≥digo problem√°tico substitu√≠do")
        else:
            print("   ‚ö†Ô∏è C√≥digo problem√°tico n√£o encontrado (pode ter sido alterado)")
        
        # 4. Verificar se h√° outros problemas similares
        print("\nüîç 4. VERIFICANDO OUTROS PROBLEMAS:")
        
        # Verificar se h√° outras chamadas para create_dre_n0_view
        create_calls = content.count("create_dre_n0_view")
        print(f"   üìä Total de chamadas para create_dre_n0_view: {create_calls}")
        
        # Verificar se h√° outras verifica√ß√µes problem√°ticas
        if "for√ßando recria√ß√£o" in content:
            print("   ‚ùå Ainda h√° c√≥digo que for√ßa recria√ß√£o")
        else:
            print("   ‚úÖ C√≥digo de recria√ß√£o for√ßada removido")
        
        # 5. Salvar o arquivo corrigido
        print("\nüíæ 5. SALVANDO ARQUIVO CORRIGIDO:")
        
        with open(file_path, 'w', encoding='utf-8') as f:
            f.write(content)
        
        print(f"   ‚úÖ Arquivo salvo: {file_path}")
        
        # 6. Verificar se a corre√ß√£o foi aplicada
        print("\nüîç 6. VERIFICANDO CORRE√á√ÉO:")
        
        with open(file_path, 'r', encoding='utf-8') as f:
            corrected_content = f.read()
        
        if "for√ßando recria√ß√£o para aplicar corre√ß√µes" not in corrected_content:
            print("   ‚úÖ Corre√ß√£o aplicada com sucesso")
        else:
            print("   ‚ùå Corre√ß√£o N√ÉO foi aplicada")
        
        if "usando view existente" in corrected_content:
            print("   ‚úÖ Novo c√≥digo implementado")
        else:
            print("   ‚ùå Novo c√≥digo N√ÉO foi implementado")
        
        return True
        
    except Exception as e:
        print(f'‚ùå Erro: {e}')
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    try:
        success = fix_dre_n0_endpoint()
        if success:
            print("\nüéØ ENDPOINT DRE N0 CORRIGIDO!")
        else:
            print("\n‚ùå ERRO AO CORRIGIR ENDPOINT!")
            
    except Exception as e:
        print(f"\n‚ùå Erro: {e}")
        import traceback
        traceback.print_exc()
